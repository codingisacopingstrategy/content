In traditional information architectures, content is the thing that is passed through the system. the definition of the system is solid. the content is arbitrary, replaceable, disposable. It should be the other way around.

XML based formats like SVG, UFO and TEI (and of course XHTML) share some unique properties that set them apart from earlier file formats. They are not designed to store the data for an application, but rather they are specifications for describing a certain resource as well as possible. This turns the architecture on its head: the content becomes well defined, but the tools that deal with are left unspecified, they could be any software that understands the format: arbitrary, replaceable, disposable. The content, not the software stack, becomes the nucleus of the information architecture.