= The changing face of software development =

//meta: I would like to somehow make the point that the production of software is starting to be more like the production of other kinds of culture, and that in learning how to deal with culture on the computer, we might learn from software—and possibly vice versa//

Software is culture. It has always been, of course, as a human product. But it is evolving from its roots as tied to specific technological appliances into more pervasive kind of culture, like music or fashion.

The app store model has has enabled software as a fashion prone commodity much like pop songs.




The bra
Obviously, some people are more ‘musical’ than others, yet 
Everybody likes to listen to music, everybody sings in the bathroom, many people

How open source is effectively .
Hire a virtual private server with Linux or BSD installed, and suddenly a stack that reflects forty years of engineering practice is yours. Really yours. And learning how to use it is dead simple with the abundance of freely available information on the internet.





=== The historiciy of the computer ===

> The unix-jun72 project has scanned in a printout of 1st Edition UNIX from June 1972, and restored it to an incomplete but running system. Userland binaries and a C compiler have been recovered from other surviving DECtapes. http://code.google.com/p/unix-jun72/
(wtf wiki creole has no footnotes?)

Software engineering as a culture has a firm presence on the internet. This is not surprising. The invention of new technologies like web publishing and wikis is closely linked to software engineering; programmers are often early adopters, who conseqeuently seek to codify their vernacular.

=== Lowering barrier of entry ===

Compared to ten years ago, the production

